[{"path":"https://limnotech.github.io/SCI/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 SCI authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://limnotech.github.io/SCI/articles/faqs.html","id":"effective-impervious-area-eia","dir":"Articles","previous_headings":"","what":"Effective Impervious Area (EIA)","title":"FAQs","text":"Rock Creek mainstem includes MS4 CSS. Rock Creek watershed also includes additional area beyond Rock Creek SCI subwatersheds. area Rock Creek used SCI analysis? entire Rock Creek watershed used SCI analysis. See “eia_rock_creek” tab lookup spreadsheet full list subsheds included.","code":""},{"path":"https://limnotech.github.io/SCI/articles/faqs.html","id":"water-quality-index","dir":"Articles","previous_headings":"","what":"Water Quality Index","title":"FAQs","text":"non-detects handled dataset? reporting limit used non-detect values. example, results reported <0.010, got incorporated analysis 0.010. water quality criteria used various parameters? See Section 1 (Indicators Metrics) Stream Condition Index Methodology (2022) Among non-nutrient WQ indicators, maximum criteria, minimum criteria, maximum minimum criteria. assess_wq() function handles three cases. nutrient WQ indicatiors (TN TP), assess_wq_nutrients() requires criteria input Piedmont Coastal Plain Level III Ecoregions","code":""},{"path":"https://limnotech.github.io/SCI/articles/faqs.html","id":"aquatic-life-index","dir":"Articles","previous_headings":"","what":"Aquatic Life Index","title":"FAQs","text":"aquatic life metrics calculated?  four metrics get calculated outside R package get incorporated lookup tables data/lookup_tables.xlsx. Connection Mainstem unlikely change year year. Subsheds assigned score either 10 (connected mainstem) 1 (connected mainstem). option calculating fish IBI, habitat PHI, macroinvertebrate HBI MBSStools R package.  IBI, PHI, HBI scores get translated SCI score added relevant lookup table. IBI, PHI, HBI scores translate SCI scores? See conversion tables :","code":""},{"path":"https://limnotech.github.io/SCI/articles/faqs.html","id":"stations","dir":"Articles","previous_headings":"","what":"Stations","title":"FAQs","text":"stations included tributary? station locations within given tributary incorporated analysis included location_id lookup table. Rock Creek, include stations specifically Upper Rock Creek Lower Rock Creek. separate scores calculated upper lower segments Rock Creek Watts Branch? , single score calculated indicator Rock Creek Watts Branch","code":""},{"path":"https://limnotech.github.io/SCI/articles/faqs.html","id":"timeframe","dir":"Articles","previous_headings":"","what":"Timeframe","title":"FAQs","text":"timeframe used analysis? goal use five recent calendar years data (e.g. 01/01/2020 – 12/31/2024). exceptions may made extend timeframe beyond five years found inadequate data.","code":""},{"path":"https://limnotech.github.io/SCI/articles/faqs.html","id":"troubleshooting","dir":"Articles","previous_headings":"","what":"Troubleshooting","title":"FAQs","text":"try run R code, get warning. ? warnings expected issue running R code. able proceed steps normal. still questions concerns, contact package maintainer (see ‘Contacts’ subsection FAQs) try run R code, get error. ? Possible things try include: Read error message see can pinpoint error occurred. ·sure input variables specified correct. Confirm file names pathways correct. Check whether datasets format changes. Changes field names, changes waterbody names, new sampling IDs, etc. can disrupt code. ’re unable resolve error, still questions concerns, contact package maintainer (see ‘Contacts’ subsection FAQs)","code":""},{"path":"https://limnotech.github.io/SCI/articles/faqs.html","id":"contacts","dir":"Articles","previous_headings":"","what":"Contacts","title":"FAQs","text":"contact questions R package? R package currently maintained Shanna Rucker Blount (LimnoTech). can contact srucker@limno.com","code":""},{"path":[]},{"path":"https://limnotech.github.io/SCI/articles/pre-processing.html","id":"notes","dir":"Articles","previous_headings":"Trash and Dumpsites","what":"Notes","title":"Pre-Processing","text":"R functions assess_trash() assess_dumpsites() require dataframe inputs processed RSA reach data RSA point data (dumpsites ) watershed layer included RSA database used due issue found. example, layer “Watersheds_Notes_RSA2021” missing area Rock Creek. Instead used: DC Subwatersheds Open Data Layer.","code":""},{"path":"https://limnotech.github.io/SCI/articles/pre-processing.html","id":"steps-for-processing-rsa-stream-reach-and-point-data","dir":"Articles","previous_headings":"Trash and Dumpsites","what":"Steps for processing RSA stream reach and point data","title":"Pre-Processing","text":"StreamPoints feature layer, copy GlobalID new field Set data type new GUID New field name suggestion: GlobalID_copy step needed GlobalID information included intersected table Intersect DC Subwatersheds Open Data Layer StreamPoints layer Run ‘Add Attribute Index’ tool Intersected layer ID field indexed: Field Index: GlobalID_copy Index Name: GlobalID_index Join StreamPoints attributes table StreamPoints feature layer. See settings screenshot : ’One Many” Join Operation option, make sure attribute table feature layer geodatabase  Export joined StreamPoints using ‘Table Excel’ geoprocessing tool Save file R package data folder Update file name input variable workflow.R file input variables section workflow.R, update field name prefix variables (needed) Repeat steps 1, 3, 4, 5 6 using StreamReaches feature layer attribute table Skip Step 2 since subshed information already included field StreamReaches feature layer","code":""},{"path":[]},{"path":"https://limnotech.github.io/SCI/articles/pre-processing.html","id":"notes-1","dir":"Articles","previous_headings":"Effective Impervious Area (EIA)","what":"Notes","title":"Pre-Processing","text":"Subshed area calculations done external R package. Lookup tables must updated manually. final EIA percentage score calculations done R. BMP Data timeframe always begin January 1, 2000. two lookup tables need manually updated annual SCI run: eia_subsheds eia_rock_creek addition sci_subshed field, main columns lookup tables get used R functions prefix “analysis_” Analysis_subshed_m2 Analysis_impervious_m2 Analysis_impervious_treated_m2 columns particular years reference GIS analysis repeated numbers needed later Special subshed notes: Piney Branch sci_subshed MS4 CSS. eia_subsheds lookup table includes MS4 CSS subsheds two separate segments. Reservation 630 used sci_subshed, Melvin Hazen Valley Branch used lookup subwatershed data sources","code":""},{"path":"https://limnotech.github.io/SCI/articles/pre-processing.html","id":"steps-for-impervious-area-calculation","dir":"Articles","previous_headings":"Effective Impervious Area (EIA)","what":"Steps for impervious area calculation","title":"Pre-Processing","text":"perform following steps new impervious surface available Open Data DC Start latest impervious surface layer Open Data DC (e.g., 2023 Impervious Surface) Intersect impervious surface layer Open Data DC Subwatersheds layer Dissolve intersected layer summarize reduce number features (See screenshot Dissolve settings)  Export Dissolve table excel. Update lookup tables R package spreadsheet. data/lookup_tables.xlsx, modify eia_subsheds eia_rock_creek spreadsheet tabs: Add new column called “20XX_impervious_m2” bring data Dissolve table Update “analysis_impervious_m2” column referencing new column created Save spreadsheet workflow.R script, uncomment code eia_subsheds eia_rock_creek. Run code update two .rda files. Re-comment code.","code":""},{"path":"https://limnotech.github.io/SCI/articles/pre-processing.html","id":"steps-for-impervious-treated-calculation","dir":"Articles","previous_headings":"Effective Impervious Area (EIA)","what":"Steps for impervious treated calculation","title":"Pre-Processing","text":"Export BMP data SGS using IPMT query - Start date: January 1, 2000 - End date: December 31, 20XX (use last year target 5-year period) Excel, remove BMP records meet Chesapeake Bay inspection criteria. BMPs installed 10 years ago, BMPs must passing inspection within last 10 years. Use following three fields identify remove BMP records older 10 years passing inspection: (1) Installation Date; (2) recent Inspection (3) Passed failed recent maintenance inspection? example, SCI timeframe 2020-2024, BMPs installed prior January 1, 2015 must passing inspection. ArcGIS Pro, bring table SGS export display XY data Intersect BMP point data Open Data DC Subwatersheds layer Dissolve using settings screenshot  Export Dissolve table Excel Convert impervious area sum ft2 m2 Update lookup tables R package spreadsheet. data/lookup_tables.xlsx, modify eia_subsheds eia_rock_creek spreadsheet tabs: Add new column called “20XX_impervious_treated_m2” bring data Dissolve table Update “analysis_impervious_treated_m2” column referencing new column created Save spreadsheet workflow.R script, uncomment code eia_subsheds eia_rock_creek. Run code update two .rda files. Re-comment code.","code":""},{"path":"https://limnotech.github.io/SCI/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Shanna Rucker. Author, maintainer.","code":""},{"path":"https://limnotech.github.io/SCI/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rucker S (2025). SCI: Stream Condition Index. R package version 0.0.0.9000, https://limnotech.github.io/SCI/, https://github.com/LimnoTech/SCI.","code":"@Manual{,   title = {SCI: Stream Condition Index},   author = {Shanna Rucker},   year = {2025},   note = {R package version 0.0.0.9000, https://limnotech.github.io/SCI/},   url = {https://github.com/LimnoTech/SCI}, }"},{"path":"https://limnotech.github.io/SCI/index.html","id":"sci","dir":"","previous_headings":"","what":"Stream Condition Index","title":"Stream Condition Index","text":"goal SCI calculate scores hydrology, water quality, human health, aquatic biology metrics assess streams within District Columbia.","code":""},{"path":"https://limnotech.github.io/SCI/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Stream Condition Index","text":"can install development version SCI GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"LimnoTech/SCI\")"},{"path":"https://limnotech.github.io/SCI/index.html","id":"using-the-package","dir":"","previous_headings":"","what":"Using the Package","title":"Stream Condition Index","text":"Produce SCI scores just simple steps: Complete pre-processing steps, needed. RStudio, open workflow.R script. Update “Input Variables” section script confirm latest data files saved data folder. Update lookup_tables.xlsx run code “Lookup Tables” section script, needed. Note: step typically necessary. Click Source button run workflow.R script. View results all_scores.csv.","code":""},{"path":"https://limnotech.github.io/SCI/reference/SCI-package.html","id":null,"dir":"Reference","previous_headings":"","what":"SCI: Stream Condition Index — SCI-package","title":"SCI: Stream Condition Index — SCI-package","text":"Calculates scores hydrology, water quality, human health, aquatic biology metrics assess streams within District Columbia.","code":""},{"path":[]},{"path":"https://limnotech.github.io/SCI/reference/SCI-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"SCI: Stream Condition Index — SCI-package","text":"Maintainer: Shanna Rucker srucker@limno.com","code":""},{"path":"https://limnotech.github.io/SCI/reference/assess_dumpsites.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate dumpsite scores — assess_dumpsites","title":"Calculate dumpsite scores — assess_dumpsites","text":"Calculate dumpsite scores","code":""},{"path":"https://limnotech.github.io/SCI/reference/assess_dumpsites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate dumpsite scores — assess_dumpsites","text":"","code":"assess_dumpsites(   df_point,   df_reach,   reach_prefix_from_table,   reach_prefix_from_layer,   point_prefix_from_table,   point_prefix_from_layer )"},{"path":"https://limnotech.github.io/SCI/reference/assess_dumpsites.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate dumpsite scores — assess_dumpsites","text":"df_point Point data Rapid Stream Assessment (RSA) dataset. df_reach Reach data Rapid Stream Assessment (RSA) dataset. reach_prefix_from_table Field name prefix sourced RSA reach attribute table. consistent name stream reach attribute table RSA geodatabase. reach_prefix_from_layer Field name prefix sourced RSA stream reach layer. consistent name stream reach polyline layer RSA geodatabase. point_prefix_from_table Field name prefix sourced RSA point attribute table. consistent name point assessment attribute table RSA geodatabase. point_prefix_from_layer Field name prefix sourced RSA point layer. consistent name intersected stream point layer RSA geodatabase.","code":""},{"path":"https://limnotech.github.io/SCI/reference/assess_dumpsites.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate dumpsite scores — assess_dumpsites","text":"List 2 dataframes: summary score.","code":""},{"path":"https://limnotech.github.io/SCI/reference/assess_dumpsites.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate dumpsite scores — assess_dumpsites","text":"","code":"assess_dumpsites(df_point_example,                            df_reach_example,                            \"StreamReachAttributes\",                            \"StreamReaches\",                            \"StreamPointAttributes\",                            \"StreamPoints_Intersect\" ) #> $summary #> # A tibble: 9 × 8 #> # Rowwise:  #>   sci_subshed            dumpsite_count applied_influence subshed_length_meters #>   <chr>                           <int>             <dbl>                 <dbl> #> 1 Broad Branch                        2                -1                 9840. #> 2 Fort Davis Tributary                3                -2                 1469. #> 3 Fort Dupont Tributary               6                -2                 9175. #> 4 Fort Stanton Tributary              1                -2                 2507. #> 5 Normanstone Creek                   2                -1                 3527. #> 6 Oxon Run                            1                -1                10144. #> 7 Pinehurst Branch                    1                -1                 6001. #> 8 Rock Creek                          4                -2                38328. #> 9 Watts Branch                        2                -2                 6035. #> # ℹ 4 more variables: subshed_length_miles <dbl>, sites_per_mile <dbl>, #> #   score <dbl>, score_weighted <dbl> #>  #> $score #> # A tibble: 25 × 2 #> # Rowwise:  #>    sci_subshed            Dumpsites #>    <chr>                      <dbl> #>  1 Broad Branch                   7 #>  2 Fort Davis Tributary           1 #>  3 Fort Dupont Tributary          2 #>  4 Fort Stanton Tributary         4 #>  5 Normanstone Creek              4 #>  6 Oxon Run                       8 #>  7 Pinehurst Branch               7 #>  8 Rock Creek                     7 #>  9 Watts Branch                   5 #> 10 Battery Kemble Creek          10 #> # ℹ 15 more rows #>"},{"path":"https://limnotech.github.io/SCI/reference/assess_eia.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate scores for effective impervious area (EIA) — assess_eia","title":"Calculate scores for effective impervious area (EIA) — assess_eia","text":"Calculate scores effective impervious area (EIA)","code":""},{"path":"https://limnotech.github.io/SCI/reference/assess_eia.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate scores for effective impervious area (EIA) — assess_eia","text":"","code":"assess_eia()"},{"path":"https://limnotech.github.io/SCI/reference/assess_eia.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate scores for effective impervious area (EIA) — assess_eia","text":"List 2 dataframes: summary score.","code":""},{"path":"https://limnotech.github.io/SCI/reference/assess_eia.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate scores for effective impervious area (EIA) — assess_eia","text":"","code":"assess_eia() #> $summary #> # A tibble: 25 × 7 #> # Rowwise:  #>    sci_subshed        subshed impervious impervious_treated effective_impervious #>    <chr>                <dbl>      <dbl>              <dbl>                <dbl> #>  1 Battery Kemble Cr…  9.37e5    201840.             26487.              175353. #>  2 Broad Branch        4.65e6   1627836.             76874.             1550962. #>  3 Dalecarlia Tribut…  1.09e6    295100.             23139.              271960. #>  4 Dumbarton Oaks      5.51e5    153336.             11829.              141508. #>  5 Fenwick Branch      8.94e5    284547.              6249.              278298. #>  6 Fort Chaplin Trib…  1.18e6    423427.             30927.              392500. #>  7 Fort Davis Tribut…  9.47e5    328257.             12328.              315929. #>  8 Fort Dupont Tribu…  1.66e6    154824.             15534.              139289. #>  9 Fort Stanton Trib…  1.12e6    488751.             64799.              423952. #> 10 Foundry Branch      4.59e6   1725013.            198108.             1526905. #> # ℹ 15 more rows #> # ℹ 2 more variables: percent_effective_impervious <dbl>, score <dbl> #>  #> $score #> # A tibble: 25 × 2 #> # Rowwise:  #>    sci_subshed            `Effective Impervious Area` #>    <chr>                                        <dbl> #>  1 Battery Kemble Creek                             6 #>  2 Broad Branch                                     2 #>  3 Dalecarlia Tributary                             4 #>  4 Dumbarton Oaks                                   4 #>  5 Fenwick Branch                                   3 #>  6 Fort Chaplin Tributary                           2 #>  7 Fort Davis Tributary                             2 #>  8 Fort Dupont Tributary                            8 #>  9 Fort Stanton Tributary                           1 #> 10 Foundry Branch                                   2 #> # ℹ 15 more rows #>"},{"path":"https://limnotech.github.io/SCI/reference/assess_trash.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate trash scores. — assess_trash","title":"Calculate trash scores. — assess_trash","text":"Calculate trash scores.","code":""},{"path":"https://limnotech.github.io/SCI/reference/assess_trash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate trash scores. — assess_trash","text":"","code":"assess_trash(df_reach, reach_prefix_from_table, reach_prefix_from_layer)"},{"path":"https://limnotech.github.io/SCI/reference/assess_trash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate trash scores. — assess_trash","text":"df_reach Reach data Rapid Stream Assessment (RSA) dataset. reach_prefix_from_table Field name prefix sourced RSA reach attribute table. consistent name stream reach attribute table RSA geodatabase. reach_prefix_from_layer Field name prefix sourced RSA stream reach layer. consistent name stream reach polyline layer RSA geodatabase.","code":""},{"path":"https://limnotech.github.io/SCI/reference/assess_trash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate trash scores. — assess_trash","text":"List 2 dataframes: summary score.","code":""},{"path":"https://limnotech.github.io/SCI/reference/assess_trash.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate trash scores. — assess_trash","text":"","code":"assess_trash(df_reach_example,                        \"StreamReachAttributes\",                        \"StreamReaches\") #> Error in dplyr::filter(., date >= start_date & date <= end_date): ℹ In argument: `date >= start_date & date <= end_date`. #> Caused by error: #> ! object 'start_date' not found"},{"path":"https://limnotech.github.io/SCI/reference/assess_wq.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate water quality scores — assess_wq","title":"Calculate water quality scores — assess_wq","text":"Calculate water quality scores","code":""},{"path":"https://limnotech.github.io/SCI/reference/assess_wq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate water quality scores — assess_wq","text":"","code":"assess_wq(df, parameter_name, unit, max_criteria = NULL, min_criteria = NULL)"},{"path":"https://limnotech.github.io/SCI/reference/assess_wq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate water quality scores — assess_wq","text":"df DOEE Ambient Water Quality Data processed formatted parameter_name String indicate target parameter: \"Conductivity\", \"Dissolved oxygen ()\", \"Escherichia coli\", \"pH\", \"Temperature, water\", \"Turbidity\" unit String indicate unit water quality parameter max_criteria DC water quality criteria maximum value min_criteria DC water quality criteria minimum value","code":""},{"path":"https://limnotech.github.io/SCI/reference/assess_wq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate water quality scores — assess_wq","text":"List three dataframes: results, summary, score","code":""},{"path":"https://limnotech.github.io/SCI/reference/assess_wq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate water quality scores — assess_wq","text":"","code":"assess_wq(df_wq_processed_example,                     parameter_name = \"Temperature, water\",                     unit = \"deg C\",                     max_criteria = 24) #> $results #> # A tibble: 586 × 9 #>    sample_id   location_id date       parameter unit  result qualifier excursion #>    <chr>       <chr>       <date>     <chr>     <chr>  <dbl> <chr>         <dbl> #>  1 RCR01_1507… RCR01       2015-07-14 Temperat… deg C  23.2  \"\"               NA #>  2 RCR01_1508… RCR01       2015-08-11 Temperat… deg C  22.8  \"\"               NA #>  3 RCR01_1509… RCR01       2015-09-21 Temperat… deg C  19.4  \"\"               NA #>  4 RCR01_1510… RCR01       2015-10-20 Temperat… deg C   9.10 \"\"               NA #>  5 RCR01_1511… RCR01       2015-11-03 Temperat… deg C  12.5  \"\"               NA #>  6 RCR01_1512… RCR01       2015-12-15 Temperat… deg C  12.4  \"\"               NA #>  7 RCR01_1601… RCR01       2016-01-05 Temperat… deg C   1.85 \"\"               NA #>  8 RCR01_1602… RCR01       2016-02-02 Temperat… deg C   3.21 \"\"               NA #>  9 RCR01_1603… RCR01       2016-03-15 Temperat… deg C  10.8  \"\"               NA #> 10 RCR01_1604… RCR01       2016-04-05 Temperat… deg C  10.3  \"\"               NA #> # ℹ 576 more rows #> # ℹ 1 more variable: outside_limit <dbl> #>  #> $summary #> # A tibble: 25 × 9 #>    sci_subshed  n_tests n_tests_failed excursion     nse    f2    f3   wqi score #>    <chr>          <int>          <dbl>     <dbl>   <dbl> <dbl> <dbl> <dbl> <dbl> #>  1 Battery Kem…      14              0    0      0        0    0     100   10    #>  2 Broad Branch      14              0    0      0        0    0     100   10    #>  3 Dalecarlia …      14              1    0.0904 0.00646  7.14 0.642  94.9  9.49 #>  4 Dumbarton O…      14              0    0      0        0    0     100   10    #>  5 Fenwick Bra…      14              1    0.0179 0.00128  7.14 0.128  94.9  9.49 #>  6 Fort Chapli…      13              0    0      0        0    0     100   10    #>  7 Fort Davis …      14              0    0      0        0    0     100   10    #>  8 Fort Dupont…      10              0    0      0        0    0     100   10    #>  9 Fort Stanto…      14              1    0.0321 0.00229  7.14 0.229  94.9  9.49 #> 10 Foundry Bra…      14              0    0      0        0    0     100   10    #> # ℹ 15 more rows #>  #> $score #> # A tibble: 25 × 2 #>    sci_subshed            `Temperature, water` #>    <chr>                                 <dbl> #>  1 Battery Kemble Creek                  10    #>  2 Broad Branch                          10    #>  3 Dalecarlia Tributary                   9.49 #>  4 Dumbarton Oaks                        10    #>  5 Fenwick Branch                         9.49 #>  6 Fort Chaplin Tributary                10    #>  7 Fort Davis Tributary                  10    #>  8 Fort Dupont Tributary                 10    #>  9 Fort Stanton Tributary                 9.49 #> 10 Foundry Branch                        10    #> # ℹ 15 more rows #>"},{"path":"https://limnotech.github.io/SCI/reference/assess_wq_nutrients.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate water quality scores for nutrients — assess_wq_nutrients","title":"Calculate water quality scores for nutrients — assess_wq_nutrients","text":"Calculate water quality scores nutrients","code":""},{"path":"https://limnotech.github.io/SCI/reference/assess_wq_nutrients.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate water quality scores for nutrients — assess_wq_nutrients","text":"","code":"assess_wq_nutrients(   df,   parameter_name,   piedmont_criteria,   coastal_plain_criteria )"},{"path":"https://limnotech.github.io/SCI/reference/assess_wq_nutrients.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate water quality scores for nutrients — assess_wq_nutrients","text":"df DOEE Ambient Water Quality Data processed formatted parameter_name String indicate target parameter: \"Nitrogen\", \"Phosphorus, Total (P)\" piedmont_criteria Nutrient criteria recommendation Piedmont Ecoregion 64 mg/L coastal_plain_criteria Nutrient criteria recommendation Coastal Plain Ecoregion 65 mg/L","code":""},{"path":"https://limnotech.github.io/SCI/reference/assess_wq_nutrients.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate water quality scores for nutrients — assess_wq_nutrients","text":"List three dataframes: results, summary, score","code":""},{"path":"https://limnotech.github.io/SCI/reference/assess_wq_nutrients.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate water quality scores for nutrients — assess_wq_nutrients","text":"","code":"assess_wq_nutrients(df_wq_processed_example,                               parameter_name = \"Phosphorus, Total (as P)\",                               piedmont_criteria = 0.04,                               coastal_plain_criteria = 0.0225) #> $results #> # A tibble: 28 × 12 #>    sample_id  location_id date       parameter            unit  result qualifier #>    <chr>      <chr>       <date>     <chr>                <chr>  <dbl> <chr>     #>  1 20C0524-02 TNS01       2020-03-03 Phosphorus, Total (… mg/l   0.016 \"\"        #>  2 20C0524-03 TDA01       2020-03-03 Phosphorus, Total (… mg/l   0.12  \"\"        #>  3 20C0524-04 TBK01       2020-03-03 Phosphorus, Total (… NA     0.01  \"<\"       #>  4 20C0524-06 TFB02       2020-03-03 Phosphorus, Total (… NA     0.01  \"<\"       #>  5 20C0524-07 TDO01       2020-03-03 Phosphorus, Total (… mg/l   0.046 \"\"        #>  6 20C0524-10 RCR09       2020-03-03 Phosphorus, Total (… NA     0.01  \"<\"       #>  7 20C0524-11 TKV01       2020-03-03 Phosphorus, Total (… NA     0.01  \"<\"       #>  8 20C0524-12 TPY01       2020-03-03 Phosphorus, Total (… NA     0.01  \"<\"       #>  9 20C0524-13 TMH01       2020-03-03 Phosphorus, Total (… mg/l   0.021 \"\"        #> 10 20C0524-14 TBR01       2020-03-03 Phosphorus, Total (… NA     0.01  \"<\"       #> # ℹ 18 more rows #> # ℹ 5 more variables: location_name <chr>, sci_subshed <chr>, ecoregion <chr>, #> #   excursion <dbl>, outside_limit <dbl> #>  #> $summary #> # A tibble: 25 × 9 #>    sci_subshed    n_tests n_tests_failed excursion   nse    f2    f3   wqi score #>    <chr>            <int>          <dbl>     <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1 Battery Kembl…       1              0     0     0         0   0   100   10    #>  2 Broad Branch         1              0     0     0         0   0   100   10    #>  3 Dalecarlia Tr…       1              1     2     2       100  66.7  15.0  1.50 #>  4 Dumbarton Oaks       1              1     0.150 0.150   100  13.0  28.7  2.87 #>  5 Fenwick Branch       1              0     0     0         0   0   100   10    #>  6 Fort Chaplin …       1              0     0     0         0   0   100   10    #>  7 Fort Davis Tr…       1              1     1.44  1.44    100  59.1  17.9  1.79 #>  8 Fort Dupont T…       1              0     0     0         0   0   100   10    #>  9 Fort Stanton …       1              0     0     0         0   0   100   10    #> 10 Foundry Branch       1              0     0     0         0   0   100   10    #> # ℹ 15 more rows #>  #> $score #> # A tibble: 25 × 2 #>    sci_subshed            `Phosphorus, Total (as P)` #>    <chr>                                       <dbl> #>  1 Battery Kemble Creek                        10    #>  2 Broad Branch                                10    #>  3 Dalecarlia Tributary                         1.50 #>  4 Dumbarton Oaks                               2.87 #>  5 Fenwick Branch                              10    #>  6 Fort Chaplin Tributary                      10    #>  7 Fort Davis Tributary                         1.79 #>  8 Fort Dupont Tributary                       10    #>  9 Fort Stanton Tributary                      10    #> 10 Foundry Branch                              10    #> # ℹ 15 more rows #>"},{"path":"https://limnotech.github.io/SCI/reference/assign_score_from_maximum.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign score based on lookup of maximum number. Used for dumpsites and EIA. — assign_score_from_maximum","title":"Assign score based on lookup of maximum number. Used for dumpsites and EIA. — assign_score_from_maximum","text":"Assign score based lookup maximum number. Used dumpsites EIA.","code":""},{"path":"https://limnotech.github.io/SCI/reference/assign_score_from_maximum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign score based on lookup of maximum number. Used for dumpsites and EIA. — assign_score_from_maximum","text":"","code":"assign_score_from_maximum(value, lookup_table, lookup_field)"},{"path":"https://limnotech.github.io/SCI/reference/assign_score_from_maximum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign score based on lookup of maximum number. Used for dumpsites and EIA. — assign_score_from_maximum","text":"value Number dumpsites per mile given subwatershed. lookup_table Lookup table number dumpsites per mile allowed per score (1-10). lookup_field Column name containing maximum number sites per mile.","code":""},{"path":"https://limnotech.github.io/SCI/reference/assign_score_from_maximum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign score based on lookup of maximum number. Used for dumpsites and EIA. — assign_score_from_maximum","text":"Numerical score (1-10)","code":""},{"path":"https://limnotech.github.io/SCI/reference/assign_score_from_maximum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign score based on lookup of maximum number. Used for dumpsites and EIA. — assign_score_from_maximum","text":"","code":"assign_score_from_maximum(0.5, dumpsite_score, \"max_sites_per_mile\") #> [1] 7"},{"path":"https://limnotech.github.io/SCI/reference/format_wq.html","id":null,"dir":"Reference","previous_headings":"","what":"Format downloaded water quality data — format_wq","title":"Format downloaded water quality data — format_wq","text":"Format downloaded water quality data","code":""},{"path":"https://limnotech.github.io/SCI/reference/format_wq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format downloaded water quality data — format_wq","text":"","code":"format_wq(df)"},{"path":"https://limnotech.github.io/SCI/reference/format_wq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format downloaded water quality data — format_wq","text":"df DOEE Ambient Water Quality data downloaded https://dcdoeepub.equisonline.com/PUBLIC.html","code":""},{"path":"https://limnotech.github.io/SCI/reference/format_wq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format downloaded water quality data — format_wq","text":"Formatted dataframe","code":""},{"path":"https://limnotech.github.io/SCI/reference/format_wq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format downloaded water quality data — format_wq","text":"","code":"format_wq(df_wq_example) #> Warning: There was 1 warning in `dplyr::mutate()`. #> ℹ In argument: `result_format = as.numeric(result_format)`. #> Caused by warning: #> ! NAs introduced by coercion #> # A tibble: 98,073 × 14 #>    `Sample ID` Location Date    Analyte Unit  SAMPLETIME Result `Lab Qualifiers` #>    <chr>       <chr>    <chr>   <chr>   <chr> <chr>      <chr>  <chr>            #>  1 20C0524-01  PTB01    03 Mar… Nitrat… mg/l  10:03      1.23   M4               #>  2 20C0524-01  PTB01    03 Mar… Nitrog… mg/l  10:03      2.91   NA               #>  3 20C0524-01  PTB01    03 Mar… Phosph… NA    10:03      < 0.0… NA               #>  4 20C0524-01  PTB01    03 Mar… Total … mg/l  10:03      1.68   NA               #>  5 20C0524-02  TNS01    03 Mar… Nitrat… mg/l  10:29      0.489  NA               #>  6 20C0524-02  TNS01    03 Mar… Nitrog… mg/l  10:29      1.89   NA               #>  7 20C0524-02  TNS01    03 Mar… Phosph… mg/l  10:29      0.016  NA               #>  8 20C0524-02  TNS01    03 Mar… Total … mg/l  10:29      1.40   NA               #>  9 20C0524-03  TDA01    03 Mar… Nitrat… mg/l  10:53      2.10   NA               #> 10 20C0524-03  TDA01    03 Mar… Nitrog… mg/l  10:53      3.50   NA               #> # ℹ 98,063 more rows #> # ℹ 6 more variables: `Validator Qualifiers` <chr>, #> #   `Interpreted Qualifiers` <chr>, result_format <dbl>, #> #   qualifier_format <chr>, location_format <chr>, date_format <date>"},{"path":"https://limnotech.github.io/SCI/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://limnotech.github.io/SCI/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://limnotech.github.io/SCI/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://limnotech.github.io/SCI/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://limnotech.github.io/SCI/reference/process_wq.html","id":null,"dir":"Reference","previous_headings":"","what":"Process formatted water quality data — process_wq","title":"Process formatted water quality data — process_wq","text":"Process formatted water quality data","code":""},{"path":"https://limnotech.github.io/SCI/reference/process_wq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process formatted water quality data — process_wq","text":"","code":"process_wq(df, start_date, end_date)"},{"path":"https://limnotech.github.io/SCI/reference/process_wq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process formatted water quality data — process_wq","text":"df Formatted dataframe returned format_wq start_date Beginning timeframe evaluated (ex. first day five-year assessment period). end_date End timeframe evaluated (ex. last day five-year assessment period).","code":""},{"path":"https://limnotech.github.io/SCI/reference/process_wq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process formatted water quality data — process_wq","text":"Processed dataframe","code":""},{"path":"https://limnotech.github.io/SCI/reference/process_wq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process formatted water quality data — process_wq","text":"","code":"process_wq(df_wq_formatted_example, \"2015-07-01\", \"2020-06-30\") #> # A tibble: 3,734 × 7 #>    sample_id  location_id date       parameter            unit  result qualifier #>    <chr>      <chr>       <date>     <chr>                <chr>  <dbl> <chr>     #>  1 20C0524-02 TNS01       2020-03-03 Nitrogen             mg/l   1.89  \"\"        #>  2 20C0524-02 TNS01       2020-03-03 Phosphorus, Total (… mg/l   0.016 \"\"        #>  3 20C0524-03 TDA01       2020-03-03 Nitrogen             mg/l   3.5   \"\"        #>  4 20C0524-03 TDA01       2020-03-03 Phosphorus, Total (… mg/l   0.12  \"\"        #>  5 20C0524-04 TBK01       2020-03-03 Nitrogen             mg/l   5.12  \"\"        #>  6 20C0524-04 TBK01       2020-03-03 Phosphorus, Total (… NA     0.01  \"<\"       #>  7 20C0524-06 TFB02       2020-03-03 Nitrogen             mg/l   2.65  \"\"        #>  8 20C0524-06 TFB02       2020-03-03 Phosphorus, Total (… NA     0.01  \"<\"       #>  9 20C0524-07 TDO01       2020-03-03 Nitrogen             mg/l   4.46  \"\"        #> 10 20C0524-07 TDO01       2020-03-03 Phosphorus, Total (… mg/l   0.046 \"\"        #> # ℹ 3,724 more rows"}]
